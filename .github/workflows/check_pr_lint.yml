name: Check PR Lint

on:
  pull_request:
    types: [ opened, reopen, synchronize, ready_for_review ]

jobs:
  check_pr_lint:
    name: Check PR Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm i

      - name: Fetch PR Base
        run: |
          git fetch origin ${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
          echo "Base branch is ${{ github.base_ref }}"

      - name: Get Changed Files
        run: |
          CHANGED_FILES=$(git diff --name-only --diff-filter=ACMR origin/${{ github.base_ref }} | grep -E "^src/.*\.(js|ts|vue)$" || echo "")
          CHANGED_FILES=$(echo "$CHANGED_FILES" | tr '\n' ' ')
          echo "Changed files are: $CHANGED_FILES"
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
          cat $GITHUB_ENV

      - name: Run ESLint
        id: lint
        if: ${{ env.CHANGED_FILES }} != ''
        run: |
          echo "Running ESLint on files: ${{ env.CHANGED_FILES }}"
          npx eslint ${{ env.CHANGED_FILES }}
        continue-on-error: true

      - name: Save ESLint Results
        if: steps.lint.outcome == 'failure' && ${{ env.CHANGED_FILES }} != ''
        run: |
          npx eslint --output-file lint_report.json --format json ${{ env.CHANGED_FILES }}
        continue-on-error: true

      - name: Annotate ESLint Results
        if: steps.lint.outcome == 'failure' && ${{ env.CHANGED_FILES }} != ''
        uses: ataylorme/eslint-annotate-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          report-json: lint_report.json
        continue-on-error: true

      - name: Comment on PR
        if: steps.lint.outcome == 'failure' && ${{ env.CHANGED_FILES }} != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              repo: context.repo.repo,
              owner: context.repo.owner,
              issue_number: context.issue.number,
              body: ':warning: ESLint 오류가 발생했습니다.',
            })

  # check_pr_lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Call 'Check PR Lint' Action
  #       uses: action-study/github-actions/check_pr_lint@feat/check_pr_lint
  #       with:
  #         githubToken: ${{ secrets.GITHUB_TOKEN }}
  #         filePattern: ^src/.*\.(js|ts|vue)$
  #         baseName: ${{ github.base_ref }}
  #         pullRequest: |
  #           ${{
  #             format(
  #               '{{ "baseName": {0}, "title": {1}, "url": {2} }}',
  #               toJSON(github.base_ref),
  #               toJSON(github.event.pull_request.title),
  #               toJSON(github.event.pull_request.html_url)
  #             )
  #           }}
